#include <iostream>
using namespace std;
#include <vector>
#include <algorithm>

class Stack{
private:
   vector<int>stack;
   int capacity;
public:
   Stack(int size){
       capacity=size;
   }
   bool isempty(){
       return stack.empty();
   }
   bool isfull(){
       return stack.size()==capacity;
   }
   void push(int x){
       if(isfull()){
           cout<<"stack overflow"<<endl;
       }
       else{
           stack.push_back(x);
           cout<<"pushed "<<x<<" stack size "<<stack.size()<<endl;
       }
   } 
   void pop(){
       if (isempty()){
           cout<<"stack is empty"<<endl;
       }
       else{
           stack.pop_back();
       }
   }
   int peek(){
       if(isempty()){
           cout<<"stack is empty"<<endl;
           return -1;
       }
       else{
          return stack.back();
       } 
   }
   void display(){
       if(isempty()){
           cout<<"stack is empty"<<endl;
       }
       else{
           cout<<"stack element (top to bottom)"<<endl;
           for (int i=stack.size()-1;i>=0;i--){
               cout<<stack[i]<<" ";
           }
       }
       cout<<endl;
   }
};
int main() {
    Stack s(5);
    s.push(10);
    s.push(20);
    s.push(30);
    s.display();

    s.pop();
    s.display();

    cout << "Top element: " << s.peek() << endl;
    
    return 0;
 }
